<?php
/**
 * This file is part of the Global Trading Technologies Ltd workflow-extension-bundle package.
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 *
 * (c) fduch <alex.medwedew@gmail.com>
 * @date 27.07.16
 */
declare(strict_types=1);

namespace Gtt\Bundle\WorkflowExtensionsBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use JMS\JobQueueBundle\Entity\Job;

#[ORM\Entity(repositoryClass: "Gtt\Bundle\WorkflowExtensionsBundle\Entity\Repository\ScheduledJobRepository")]
#[ORM\Table(name: "gtt_workflow_scheduled_job")]
class ScheduledJob
{
    /**
     * Autogenerated id
     */
    #[ORM\Id]
    #[ORM\GeneratedValue(strategy: "AUTO")]
    #[ORM\Column(type: "integer", options: ["unsigned" => true])]
    private int $id;

    /**
     * Reschedulable or not
     */
    #[ORM\Column(type: "boolean", options: [], columnDefinition: "COMMENT 'Defines whether related job can be rescheduled or not'")]
    private bool $reschedulable = true;

    /**
     * Related jms Job to be executed later
     */
    #[ORM\OneToOne(targetEntity: Job::class)]
    #[ORM\JoinColumn(name: "jms_job_id", referencedColumnName: "id", nullable: false)]
    private Job $job;

    public function __construct(Job $transitionTriggerJob, bool $reschedulable = true)
    {
        $this->reschedulable = $reschedulable;
        $this->job = $transitionTriggerJob;
    }

    public function getId(): int
    {
        return $this->id;
    }

    public function isReschedulable(): bool
    {
        return $this->reschedulable;
    }

    public function setReschedulable(bool $reschedulable = true): void
    {
        $this->reschedulable = $reschedulable;
    }

    public function getJob(): Job
    {
        return $this->job;
    }

    public function setJob(Job $job): void
    {
        $this->job = $job;
    }
}
